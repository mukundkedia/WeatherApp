{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mukundkedia7478/WeatherApp/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coords: {\n        latitude: 0,\n        longitude: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mukundkedia7478/WeatherApp/weather-app/src/App.js"],"names":["React","Component","App","state","coords","latitude","longitude","componentDidMount","navigator","geolocation","getCurrentPosition","position","newCoords","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBE,KAFyB,GAEjB;AACNC,MAAAA,MAAM,EAAC;AACLC,QAAAA,QAAQ,EAAC,CADJ;AAELC,QAAAA,SAAS,EAAC;AAFL;AADD,KAFiB;AAAA;;AASzBC,EAAAA,iBAAiB,GAAE;AACjB,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACvBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAY;AACnD,YAAIC,SAAS,GAAG;AACdP,UAAAA,QAAQ,EAAGM,QAAQ,CAACP,MAAT,CAAgBC,QADb;AAEdC,UAAAA,SAAS,EAAGK,QAAQ,CAACP,MAAT,CAAgBE;AAFd,SAAhB;AAID,OALD;AAMD;AACF;;AAEDO,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAGH;;AAxBwB;;AA4B3B,eAAeX,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css'\n\n\nclass App extends Component{\n\n  state = {\n    coords:{\n      latitude:0,\n      longitude:0\n    }\n  }\n\n  componentDidMount(){\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition((position)=>{\n        let newCoords = {\n          latitude : position.coords.latitude,\n          longitude : position.coords.longitude\n        }\n      })\n    }\n  }\n\n  render(){\n      return (\n        <div className=\"App\"></div>\n      );\n  }\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}