{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mukundkedia7478/WeatherApp/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport DisplayWeather from './Component/DisplayWeather';\nimport Navbar from './Component/Navbar';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coords: {\n        latitude: 0,\n        longitude: 0\n      },\n      data: {},\n      inputData: \"\"\n    };\n\n    this.change = value => {\n      this.setState({\n        inputData: value\n      });\n    };\n\n    this.changeWeather = e => {\n      e.preventDefault();\n      Axios.get(`http://api.weatherstack.com/current\n    ?access_key=0713ff5b232c2944d6864479e41b757&query=${this.state.inputData}`);\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        this.setState({\n          coords: newCoords\n        });\n        Axios.get(`http://api.weatherstack.com/current?access_key=0713ff5b232c2944d6864479e41b757d&query=\n            ${this.state.coords.latitude},\n            ${this.state.coords.longitude}`).then(res => {\n          let weatherData = {\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons,\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0]\n          };\n          this.setState({\n            data: weatherData\n          });\n        });\n      });\n    } else {\n      console.log(\"Not supported\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        changeRegion: this.change,\n        changeLocation: this.changeWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        weather: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mukundkedia7478/WeatherApp/weather-app/src/App.js"],"names":["React","Component","Axios","DisplayWeather","Navbar","App","state","coords","latitude","longitude","data","inputData","change","value","setState","changeWeather","e","preventDefault","get","componentDidMount","navigator","geolocation","getCurrentPosition","position","newCoords","then","res","weatherData","location","name","region","country","wind_speed","current","pressure","precip","humidity","img","weather_icons","temperature","description","weather_descriptions","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBK,KAFyB,GAEjB;AACNC,MAAAA,MAAM,EAAC;AACLC,QAAAA,QAAQ,EAAC,CADJ;AAELC,QAAAA,SAAS,EAAC;AAFL,OADD;AAKNC,MAAAA,IAAI,EAAC,EALC;AAMNC,MAAAA,SAAS,EAAC;AANJ,KAFiB;;AAAA,SA+CzBC,MA/CyB,GA+ChBC,KAAD,IAAS;AACd,WAAKC,QAAL,CAAc;AACZH,QAAAA,SAAS,EAACE;AADE,OAAd;AAGF,KAnDwB;;AAAA,SAqDzBE,aArDyB,GAqDRC,CAAD,IAAK;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAf,MAAAA,KAAK,CAACgB,GAAN,CAAW;AACf,wDAAwD,KAAKZ,KAAL,CAAWK,SAAU,EADzE;AAED,KAzDwB;AAAA;;AAWzBQ,EAAAA,iBAAiB,GAAE;AACjB,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACvBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAY;AACpD,YAAIC,SAAS,GAAG;AACbhB,UAAAA,QAAQ,EAAGe,QAAQ,CAAChB,MAAT,CAAgBC,QADd;AAEbC,UAAAA,SAAS,EAAGc,QAAQ,CAAChB,MAAT,CAAgBE;AAFf,SAAhB;AAIC,aAAKK,QAAL,CAAc;AACZP,UAAAA,MAAM,EAAGiB;AADG,SAAd;AAGAtB,QAAAA,KAAK,CAACgB,GAAN,CAAW;AACnB,cAAc,KAAKZ,KAAL,CAAWC,MAAX,CAAkBC,QAAS;AACzC,cAAc,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,SAAU,EAFlC,EAEqCgB,IAFrC,CAE0CC,GAAG,IAAE;AACzC,cAAIC,WAAW,GAAG;AAChBC,YAAAA,QAAQ,EAACF,GAAG,CAAChB,IAAJ,CAASkB,QAAT,CAAkBC,IADX;AAEhBC,YAAAA,MAAM,EAAEJ,GAAG,CAAChB,IAAJ,CAASkB,QAAT,CAAkBE,MAFV;AAGhBC,YAAAA,OAAO,EAAEL,GAAG,CAAChB,IAAJ,CAASkB,QAAT,CAAkBG,OAHX;AAIhBC,YAAAA,UAAU,EAAEN,GAAG,CAAChB,IAAJ,CAASuB,OAAT,CAAiBD,UAJb;AAKhBE,YAAAA,QAAQ,EAAER,GAAG,CAAChB,IAAJ,CAASuB,OAAT,CAAiBC,QALX;AAMhBC,YAAAA,MAAM,EAAET,GAAG,CAAChB,IAAJ,CAASuB,OAAT,CAAiBE,MANT;AAOhBC,YAAAA,QAAQ,EAAEV,GAAG,CAAChB,IAAJ,CAASuB,OAAT,CAAiBG,QAPX;AAQhBC,YAAAA,GAAG,EAAEX,GAAG,CAAChB,IAAJ,CAASuB,OAAT,CAAiBK,aARN;AAShBC,YAAAA,WAAW,EAAEb,GAAG,CAAChB,IAAJ,CAASuB,OAAT,CAAiBM,WATd;AAUhBC,YAAAA,WAAW,EAAEd,GAAG,CAAChB,IAAJ,CAASuB,OAAT,CAAiBQ,oBAAjB,CAAsC,CAAtC;AAVG,WAAlB;AAYA,eAAK3B,QAAL,CAAc;AACZJ,YAAAA,IAAI,EAACiB;AADO,WAAd;AAGD,SAlBL;AAmBD,OA3BD;AA4BD,KA7BD,MA8BI;AACFe,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF;;AAcDC,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKhC,MAA3B;AAAmC,QAAA,cAAc,EAAE,KAAKG;AAAxD;AAAA;AAAA;AAAA;AAAA,cADF,eAEI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWI;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMH;;AAlEwB;;AAsE3B,eAAeL,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css'\nimport Axios from 'axios';\nimport DisplayWeather from './Component/DisplayWeather'\nimport Navbar from './Component/Navbar'\n\nclass App extends Component{\n\n  state = {\n    coords:{\n      latitude:0,\n      longitude:0\n    },\n    data:{},\n    inputData:\"\"\n  }\n\n  componentDidMount(){\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition((position)=>{\n       let newCoords = {\n          latitude : position.coords.latitude,\n          longitude : position.coords.longitude\n        }\n        this.setState({\n          coords : newCoords\n        });\n        Axios.get(`http://api.weatherstack.com/current?access_key=0713ff5b232c2944d6864479e41b757d&query=\n            ${this.state.coords.latitude},\n            ${this.state.coords.longitude}`).then(res=>{\n              let weatherData = {\n                location:res.data.location.name,\n                region: res.data.location.region,\n                country: res.data.location.country,\n                wind_speed: res.data.current.wind_speed,\n                pressure: res.data.current.pressure,\n                precip: res.data.current.precip,\n                humidity: res.data.current.humidity,\n                img: res.data.current.weather_icons,\n                temperature: res.data.current.temperature,\n                description: res.data.current.weather_descriptions[0]\n              }\n              this.setState({\n                data:weatherData\n              });\n            })\n      })\n    }\n    else{\n      console.log(\"Not supported\");\n    }\n  }\n\n  change =(value)=>{\n     this.setState({\n       inputData:value\n     })\n  }\n\n  changeWeather = (e)=>{\n    e.preventDefault();\n    Axios.get(`http://api.weatherstack.com/current\n    ?access_key=0713ff5b232c2944d6864479e41b757&query=${this.state.inputData}`)\n  }\n\n  render(){\n      return (\n        <div className=\"App\">\n          <Navbar changeRegion={this.change} changeLocation={this.changeWeather}/>\n            <DisplayWeather weather={this.state.data}/>\n        </div>\n      );\n  }\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}