{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mukundkedia7478/WeatherApp/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      coords: {\n        latitude: 0,\n        longitude: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        this.setState({\n          coords: newCoords\n        });\n        Axios.get(`http://api.weatherstack.com/current?access_key=0713ff5b232c2944d6864479e41b757d&query=\n            ${this.state.coords.latitude},\n            ${this.state.coords.longitude}`).then(res => {\n          let weatherData = {\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons,\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0]\n          };\n        });\n      });\n    } else {\n      console.log(\"Not supported\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mukundkedia7478/WeatherApp/weather-app/src/App.js"],"names":["React","Component","Axios","App","state","coords","latitude","longitude","componentDidMount","navigator","geolocation","getCurrentPosition","position","newCoords","setState","get","then","res","weatherData","location","data","name","region","country","wind_speed","current","pressure","precip","humidity","img","weather_icons","temperature","description","weather_descriptions","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBG,KAFyB,GAEjB;AACNC,MAAAA,MAAM,EAAC;AACLC,QAAAA,QAAQ,EAAC,CADJ;AAELC,QAAAA,SAAS,EAAC;AAFL;AADD,KAFiB;AAAA;;AASzBC,EAAAA,iBAAiB,GAAE;AACjB,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACvBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAY;AACpD,YAAIC,SAAS,GAAG;AACbP,UAAAA,QAAQ,EAAGM,QAAQ,CAACP,MAAT,CAAgBC,QADd;AAEbC,UAAAA,SAAS,EAAGK,QAAQ,CAACP,MAAT,CAAgBE;AAFf,SAAhB;AAIC,aAAKO,QAAL,CAAc;AACZT,UAAAA,MAAM,EAAGQ;AADG,SAAd;AAGAX,QAAAA,KAAK,CAACa,GAAN,CAAW;AACnB,cAAc,KAAKX,KAAL,CAAWC,MAAX,CAAkBC,QAAS;AACzC,cAAc,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,SAAU,EAFlC,EAEqCS,IAFrC,CAE0CC,GAAG,IAAE;AACzC,cAAIC,WAAW,GAAG;AAChBC,YAAAA,QAAQ,EAACF,GAAG,CAACG,IAAJ,CAASD,QAAT,CAAkBE,IADX;AAEhBC,YAAAA,MAAM,EAAEL,GAAG,CAACG,IAAJ,CAASD,QAAT,CAAkBG,MAFV;AAGpBC,YAAAA,OAAO,EAAEN,GAAG,CAACG,IAAJ,CAASD,QAAT,CAAkBI,OAHP;AAIpBC,YAAAA,UAAU,EAAEP,GAAG,CAACG,IAAJ,CAASK,OAAT,CAAiBD,UAJT;AAKpBE,YAAAA,QAAQ,EAAET,GAAG,CAACG,IAAJ,CAASK,OAAT,CAAiBC,QALP;AAMpBC,YAAAA,MAAM,EAAEV,GAAG,CAACG,IAAJ,CAASK,OAAT,CAAiBE,MANL;AAOpBC,YAAAA,QAAQ,EAAEX,GAAG,CAACG,IAAJ,CAASK,OAAT,CAAiBG,QAPP;AAQpBC,YAAAA,GAAG,EAAEZ,GAAG,CAACG,IAAJ,CAASK,OAAT,CAAiBK,aARF;AASpBC,YAAAA,WAAW,EAAEd,GAAG,CAACG,IAAJ,CAASK,OAAT,CAAiBM,WATV;AAUpBC,YAAAA,WAAW,EAAEf,GAAG,CAACG,IAAJ,CAASK,OAAT,CAAiBQ,oBAAjB,CAAsC,CAAtC;AAVO,WAAlB;AAYD,SAfL;AAgBD,OAxBD;AAyBD,KA1BD,MA2BI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAGH;;AA9CwB;;AAkD3B,eAAejC,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css'\nimport Axios from 'axios';\n\n\nclass App extends Component{\n\n  state = {\n    coords:{\n      latitude:0,\n      longitude:0\n    }\n  }\n\n  componentDidMount(){\n    if(navigator.geolocation){\n      navigator.geolocation.getCurrentPosition((position)=>{\n       let newCoords = {\n          latitude : position.coords.latitude,\n          longitude : position.coords.longitude\n        }\n        this.setState({\n          coords : newCoords\n        });\n        Axios.get(`http://api.weatherstack.com/current?access_key=0713ff5b232c2944d6864479e41b757d&query=\n            ${this.state.coords.latitude},\n            ${this.state.coords.longitude}`).then(res=>{\n              let weatherData = {\n                location:res.data.location.name,\n                region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons,\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0]\n              }\n            })\n      })\n    }\n    else{\n      console.log(\"Not supported\");\n    }\n  }\n\n  render(){\n      return (\n        <div className=\"App\"></div>\n      );\n  }\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}